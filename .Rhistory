Sykefravaer_2022 = Sykefravær_2022,
Sykefravaer_2023 = Sykefravær_2023)
library(lavaan)
jk_indicators <- c("For_mye_arbeid", "Hoyt_arbeidstempo", "Ekstra_arbeid")
jr_indicators <- c("Stotte_sjef", "Stotte_kollega", "Tilbakemelding_sjef",
"Arbeidsresultater", "Grad_selvbestemming_oppgaver",
"Grad_selvbestemming_arbeid_som_skal_gjøres",
"Grad_arbeidstempo", "Grad_påvirke_beslutning_arbeid")
rm(list = ls())
library(tidyverse)
library(zoo)
library(scales)
library(ggrepel)
library(readxl)
library(httr)
library(jsonlite)
library(rjstat)
library(readr)
library(lavaan)
library(semPlot)
NSD3201 <- read_csv("Data/NSD3201.csv", show_col_types = FALSE)
NSD3201 <- NSD3201 %>%
transmute(
# Avhengig, hoveduavhengig og kontrollvariabler
Sykefravær_2022 = sfpros_uten_feriekorr_2022,
Sykefravær_2023 = sfpros_uten_feriekorr_2023,
Formue = agg_f_08,
Alder = kullaldr,
Utdanning = utdnivaa,
Kjønn = Kjonn,
Tilfredshet = Sp59g,
Motivasjon = SpMotEng_ny,
Barn = barn05,
# Jobbressurser
Støtte_sjef = QPS72_ny,
Støtte_kollega = QPS73_ny,
Tilbakemelding_sjef = Raad3a_ny,
Arbeidsresultater = QPS78_ny,
Grad_selvbestemming_oppgaver = Sp56a2,
Grad_selvbestemming_arbeid_som_skal_gjøres = Sp56b2,
Grad_arbeidstempo = QPS47,
Grad_påvirke_beslutning_arbeid = QPS53,
# Jobbkrav
For_mye_arbeid = QPS15_ny,
Høyt_arbeidstempo = QPS14_ny,
Ekstra_arbeid = Sp47f) %>%
#fjerner NA verdier
drop_na()
NSD3201 <- NSD3201 %>%
mutate(
Formue_grupper = ntile(Formue, 3),
Formue_grupper = factor(Formue_grupper,
levels = 1:3,
labels = c("Lav Formue", "Middels formue", "Høy formue")),
)
NSD3201 <- NSD3201 %>%
mutate(Log_formue = log1p(Formue))
# Ser verdier for formuegruppene
grenseverdier <- quantile(
NSD3201$Formue,
probs = c(0, 1/3, 2/3, 1),
na.rm = TRUE
)
# Deler alder inn i likt breddeintervall
NSD3201 <- NSD3201 %>%
mutate(
Alder_grupper = cut(Alder,
breaks = c(18, 30, 40, 50, 60, 66),
right = FALSE,
labels = c("18–29", "30–39", "40–49", "50–59", "60–66")
)
)
# Fikser Kjønn variabelen fra 1 og 2 til dummy
NSD3201 <- NSD3201 %>%
mutate(Kvinne = if_else(Kjønn == 2, 1L, 0L))
# Lager færre nivåer på utdanning for enklere tolkning
NSD3201 <- NSD3201 %>%
filter(Utdanning != 9) %>%  # dropp “uoppgitt”
mutate(
Utdanning_grupper = case_when(
Utdanning == 2                ~ "Grunnskole eller mindre",
Utdanning %in% c(3,4,5)       ~ "Videregående",
Utdanning %in% c(6,7,8)       ~ "Universitet/Høgskole"
),
Utdanning_grupper = factor(
Utdanning_grupper,
levels = c(
"Grunnskole eller mindre",
"Videregående",
"Universitet/Høgskole"
)
)
)
NSD3201 <- NSD3201 %>%
mutate(
kjønn_f = factor(Kjønn,
levels = c(1, 2),
labels = c("Menn", "Kvinner"))
)
# print(grenseverdier)
# Deskriptiv statistikk
# NSD3201 %>%
#   select(Sykefravær_2022, Alder, Utdanning, Kjønn, Tilfredshet, Motivasjon, Barn,
#          Støtte_sjef, Støtte_kollega, Tilbakemelding_sjef, Arbeidsresultater,
#          Grad_selvbestemming_oppgaver, Grad_selvbestemming_arbeid_som_skal_gjøres,
#          Grad_arbeidstempo, Grad_påvirke_beslutning_arbeid,
#          For_mye_arbeid, Høyt_arbeidstempo, Ekstra_arbeid) %>%
#   summary()
# library(kableExtra)
#
# # 1) Først sørg for at du har formue_gruppe som faktor med labels c("Lav","Middels","Høy")
# #    (antatt allerede laget tidligere)
#
# # 2) Velg hvilke variabler du vil beskrive
# vars <- c("Sykefravær_2022", "Alder", "Tilfredshet", "Motivasjon")
#
# # 3) Lag deskriptiv per formuegruppe
# df_formue_deskr <- NSD3201 %>%
#   group_by(Formue_grupper) %>%
#   summarise(across(all_of(vars),
#                    list(N    = ~n(),
#                         Mean = ~round(mean(.x, na.rm = TRUE), 2),
#                         SD   = ~round(sd(.x,   na.rm = TRUE), 2)),
#                    .names = "{.col}_{.fn}")) %>%
#   ungroup()
#
# # 4) Snu data slik at grupper blir kolonner
# df_formue_wide <- df_formue_deskr %>%
#   pivot_longer(-Formue_grupper,
#                names_to = c("Variable", "Stat"),
#                names_sep = "_") %>%
#   pivot_wider(names_from = Formue_grupper, values_from = value)
#
# # 5) Skriv ut som LaTeX-tabell
# df_formue_wide %>%
#   arrange(Variable, Stat) %>%
#   kable("latex", booktabs = TRUE,
#         caption = "Deskriptiv statistikk etter formuegruppe",
#         label   = "tab:deskr_formue") %>%
#   kable_styling(latex_options = c("hold_position","repeat_header"))
tabell<-NSD3201 %>%
# 1) Lag om kjonn til faktor med labels
mutate(
kjønn_f = factor(Kjønn,
levels = c(1, 2),
labels = c("Mann", "Kvinne"))
) %>%
# 2) Gruppér og summer opp
group_by(kjønn_f) %>%
summarise(
N       = n(),
pct     = round(N / nrow(NSD3201) * 100, 1),
mean_sf = round(mean(Sykefravær_2022, na.rm = TRUE), 2),
sd_sf   = round(sd(Sykefravær_2022, na.rm = TRUE), 2)
)
# utd_summ <- NSD3201 %>%
#   group_by(Utdanning_grupper) %>%
#   summarise(
#     N       = n(),
#     pct     = round(N / nrow(NSD3201) * 100, 1),
#     mean_sf = round(mean(Sykefravær_2022, na.rm = TRUE), 2),
#     sd_sf   = round(sd(Sykefravær_2022, na.rm = TRUE), 2)
#   )
#
# print(utd_summ)
# Histogram + tetthetskurve på sykefravær inkl små streker for individuelle observasjoner
fig_1 <- NSD3201 %>%
ggplot(aes(x = Sykefravær_2022)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "steelblue", alpha=0.8, color = "black") +
geom_density(color = "red", linewidth = 1) +
facet_wrap(~ kjønn_f, ncol = 1) +
labs(title = "",
x = "Sykefravær i prosent",
y = "Tetthet") +
theme_minimal()+
# endrer på y og x akse størrelse på skrift
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
strip.text = element_text(size = 16))+
scale_x_continuous(breaks = seq(0, 100, by = 10))
ggsave("dokumentobjekter/figurer/fig_1.png", plot = fig_1, width = 8, height = 5)
# Histogram/densityplot av alder inkl median og kvartilmarkører
median_alder <- NSD3201 %>%
group_by(kjønn_f) %>%
summarise(med = median(Alder, na.rm = TRUE))
fig_2 <- NSD3201 %>%
ggplot(aes(x = Alder)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "steelblue", alpha=0.8, color = "black") +
geom_density(color = "red", linewidth = 1) +
facet_wrap(~ kjønn_f, ncol = 1) +
labs(title = "",
x = "Alder",
y = "Tetthet") +
theme_minimal()+
# endrer på y og x akse størrelse på skrift
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
strip.text = element_text(size = 16))+
scale_x_continuous(breaks = seq(18, 66, by = 5))+
geom_segment(data = median_alder,
aes(x = med,
xend = med,
y = 0,
yend = 0.031),
color = "blue",
linetype = "dashed",
size = 1)
ggsave("dokumentobjekter/figurer/fig_2.png", plot = fig_2, width = 8, height = 5)
# Barplot av breddeintervallene på alder
fig_3 <- NSD3201 %>%
count(Alder_grupper) %>%
mutate(pct = n / sum(n) * 100) %>%
drop_na() %>%
ggplot(aes(x = Alder_grupper, y = pct)) +
geom_col(fill = "steelblue", color= "black") +
geom_text(aes(label = paste0(round(pct, 0.8), "%")),
vjust = -0.4, size = 4) +
labs(
x = "Aldersgruppe",
y = "",
title = ""
) +
theme_minimal()+
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16))+
scale_y_continuous(breaks = seq(0, 30, by = 5),
limits = c(0, 30))
ggsave("dokumentobjekter/figurer/fig_3.png", plot = fig_3, width = 8, height = 5)
# Respondents rapportere formue
fig_4 <- NSD3201 %>%
ggplot(aes(x = Log_formue)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "steelblue", color = "black") +
geom_density(color = "red", linewidth = 1) +
facet_wrap(~ kjønn_f, ncol = 1) +
labs(title = "",
x = "Formue (Bruttofinanskapital)",
y = "Tetthet") +
theme_minimal()+
# endrer på y og x akse størrelse på skrift
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
strip.text = element_text(size = 16))
ggsave("dokumentobjekter/figurer/fig_4.png", plot = fig_4, width = 8, height = 5)
# Søylediagram for kategoriske variabler samlet for kjønn, utdanning og formuegrupper
df_long <- NSD3201 %>%
select(Formue_grupper, Utdanning_grupper, kjønn_f) %>%
pivot_longer(
cols      = c(Formue_grupper, Utdanning_grupper),
names_to  = "variabel",
values_to = "kategori"
) %>%
count(variabel, kjønn_f, kategori) %>%
group_by(variabel, kjønn_f) %>%
mutate(
pct = n / sum(n) * 100
) %>%
ungroup()
fig_5 <- ggplot(df_long, aes(x = kategori, y = pct, fill = kjønn_f)) +
geom_col(position = position_dodge(width = 0.9),color="black") +
geom_text(aes(label = paste0(round(pct, 1), "%")),
position = position_dodge(width = 0.8),
vjust = -0.5, size = 4) +
facet_wrap(~ variabel,
scales = "free_x",
labeller = labeller(
variabel = c(
Formue_grupper       = "Formuefordeling",
Utdanning_grupper   = "Utdanning"))) +
labs(x     = "",
y     = "",
fill  = "",
title = "")+
theme_minimal(base_size = 12) +
theme(
strip.text       = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
axis.text.x      = element_text(size = 14, angle = 30, hjust = 1),
legend.title     = element_text(size = 14),
legend.text      = element_text(size = 12),
legend.key.size  = unit(1.2, "lines"),
legend.position  = "bottom")+
scale_y_continuous(breaks = seq(0, 60, by = 10),
limits = c(0, 60))+
scale_fill_manual(values = c("steelblue", "palevioletred"))
ggsave("dokumentobjekter/figurer/fig_5.png", plot = fig_5, width = 8, height = 5)
# Boksplott av sykefravær etter formuegruppe
fig_6 <- NSD3201 %>%
ggplot(aes(x = Formue_grupper, y = Sykefravær_2022)) +
geom_jitter(aes(color = Formue_grupper),
position = position_jitter(width = 0.2),
alpha = 0.5)+
geom_boxplot(aes(fill = Formue_grupper), color = "black") +
labs(title = "",
x = "Formuegruppe",
y = "Sykefravær i prosent",
color= "",
fill = "") +
theme_minimal()+
# endrer på y og x akse størrelse på skrift
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
strip.text = element_text(size = 16),
legend.position = "none")+
scale_x_discrete(labels=c("Lav", "Middels", "Høy"))+
scale_y_continuous(breaks = seq(0, 100, by = 10),
limits = c(0, 100))+
scale_fill_manual(values = c("steelblue", "palevioletred", "lightgreen"))+
scale_color_manual(values = c("steelblue", "palevioletred", "lightgreen"))
ggsave("dokumentobjekter/figurer/fig_6.png", plot = fig_6, width = 8, height = 5)
# Boksplott av sykefravær etter utdanningsnivå
fig_7 <- NSD3201 %>%
ggplot(aes(x = Utdanning_grupper, y = Sykefravær_2022)) +
geom_jitter(aes(color = Utdanning_grupper),
position = position_jitter(width = 0.2),
alpha = 0.5)+
geom_boxplot(aes(fill = Utdanning_grupper), color = "black") +
labs(title = "",
x = "Utdanningsnivå",
y = "Sykefravær i prosent",
color= "",
fill = "") +
theme_minimal()+
# endrer på y og x akse størrelse på skrift
theme(axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
strip.text = element_text(size = 16),
legend.position = "none")+
scale_x_discrete(labels=c("Grunnskole eller mindre", "Videregående", "Universitet/Høgskole"))+
scale_y_continuous(breaks = seq(0, 100, by = 10),
limits = c(0, 100))+
scale_fill_manual(values = c("steelblue", "palevioletred", "lightgreen"))+
scale_color_manual(values = c("steelblue", "palevioletred", "lightgreen"))
ggsave("dokumentobjekter/figurer/fig_7.png", plot = fig_7, width = 8, height = 5)
library(lavaan)
jk_indicators <- c("For_mye_arbeid", "Hoyt_arbeidstempo", "Ekstra_arbeid")
jr_indicators <- c("Stotte_sjef", "Stotte_kollega", "Tilbakemelding_sjef",
"Arbeidsresultater", "Grad_selvbestemming_oppgaver",
"Grad_selvbestemming_arbeid_som_skal_gjøres",
"Grad_arbeidstempo", "Grad_påvirke_beslutning_arbeid")
NSD3201 <- NSD3201 %>%
rename(Hoyt_arbeidstempo = Høyt_arbeidstempo,
Stotte_sjef = Støtte_sjef,
Stotte_kollega = Støtte_kollega,
Grad_pavirke_beslutning_arbeid = Grad_påvirke_beslutning_arbeid,
Grad_selvbestemming_arbeid_som_skal_gjores = Grad_selvbestemming_arbeid_som_skal_gjøres,
Sykefravaer_2022 = Sykefravær_2022,
Sykefravaer_2023 = Sykefravær_2023)
var_JK1 <- "For_mye_arbeid"
var_JK2 <- "Hoyt_arbeidstempo"
var_JK3 <- "Ekstra_arbeid"
var_JR1 <- "Stotte_sjef"
var_JR2 <- "Stotte_kollega"
var_JR3 <- "Tilbakemelding_sjef"
var_JR4 <- "Arbeidsresultater"
var_JR5 <- "Grad_selvbestemming_oppgaver"
var_JR6 <- "Grad_selvbestemming_arbeid_som_skal_gjores"
var_JR7 <- "Grad_arbeidstempo"
var_JR8 <- "Grad_pavirke_beslutning_arbeid"
#    Du kan lage dem slik (velg en referansekategori, f.eks. "Grunnskole eller mindre"):
NSD3201 <- NSD3201 %>%
mutate(
Utd_Videregaende = ifelse(Utdanning_grupper == "Videregående", 1, 0),
Utd_UniHogskole = ifelse(Utdanning_grupper == "Universitet/Høgskole", 1, 0)
)
# Definer lister med originale indikatornavn
jk_indicators_orig <- c("For_mye_arbeid", "Hoyt_arbeidstempo", "Ekstra_arbeid")
jr_indicators_orig <- c("Stotte_sjef", "Stotte_kollega", "Tilbakemelding_sjef",
"Arbeidsresultater", "Grad_selvbestemming_oppgaver",
"Grad_selvbestemming_arbeid_som_skal_gjores",
"Grad_arbeidstempo", "Grad_pavirke_beslutning_arbeid")
# Sørg for at alle indikatorer er numeriske
NSD3201[c(jk_indicators_orig, jr_indicators_orig)] <- lapply(NSD3201[c(jk_indicators_orig, jr_indicators_orig)], as.numeric)
NSD3201$Log_formue <- as.numeric(NSD3201$Log_formue)
# ... gjør det samme for andre variabler som Motivasjon, Sykefravær_2022 etc.
# Fjern rader med NA i de variablene som skal brukes (hvis du ikke bruker FIML)
# Dette er viktig FØR sentrering og produktlaging for å unngå feil
vars_for_model <- c("Sykefravaer_2022", "Motivasjon", "Log_formue",
jk_indicators_orig, jr_indicators_orig,
"Alder", "Kvinne", "Utd_Videregaende", "Utd_UniHogskole", "Barn") # Legg til evt. andre kontrollvar
NSD3201_complete <- NSD3201[complete.cases(NSD3201[, vars_for_model]), ]
# 1. Sentrer moderatoren
NSD3201_complete$Log_formue_c <- scale(NSD3201_complete$Log_formue, center = TRUE, scale = FALSE)[,1]
# 2. Sentrer indikatorene for JK og lag produktindikatorer for JKxFN
jk_indicators_c_names <- character() # For å lagre navn på sentrerte JK-indikatorer
jk_fn_prod_indicator_names <- character() # For å lagre navn på produktindikatorer
for (ind_orig in jk_indicators_orig) {
# Sentrer JK-indikator
ind_c_name <- paste0(ind_orig, "_c")
NSD3201_complete[[ind_c_name]] <- scale(NSD3201_complete[[ind_orig]], center = TRUE, scale = FALSE)[,1]
jk_indicators_c_names <- c(jk_indicators_c_names, ind_c_name)
# Lag produktindikator JK_indikator_c * Log_formue_c
prod_ind_name <- paste0(ind_c_name, "_x_LFC") # LFC = Log Formue Centered
NSD3201_complete[[prod_ind_name]] <- NSD3201_complete[[ind_c_name]] * NSD3201_complete[["Log_formue_c"]]
jk_fn_prod_indicator_names <- c(jk_fn_prod_indicator_names, prod_ind_name)
}
# 3. Sentrer indikatorene for JR og lag produktindikatorer for JRxFN
jr_indicators_c_names <- character() # For å lagre navn på sentrerte JR-indikatorer
jr_fn_prod_indicator_names <- character() # For å lagre navn på produktindikatorer
for (ind_orig in jr_indicators_orig) {
# Sentrer JR-indikator
ind_c_name <- paste0(ind_orig, "_c")
NSD3201_complete[[ind_c_name]] <- scale(NSD3201_complete[[ind_orig]], center = TRUE, scale = FALSE)[,1]
jr_indicators_c_names <- c(jr_indicators_c_names, ind_c_name)
# Lag produktindikator JR_indikator_c * Log_formue_c
prod_ind_name <- paste0(ind_c_name, "_x_LFC")
NSD3201_complete[[prod_ind_name]] <- NSD3201_complete[[ind_c_name]] * NSD3201_complete[["Log_formue_c"]]
jr_fn_prod_indicator_names <- c(jr_fn_prod_indicator_names, prod_ind_name)
}
# Nå har du NSD3201_complete med:
# - Log_formue_c (sentrert moderator)
# - Sentrerte indikatorer for JK (f.eks. For_mye_arbeid_c)
# - Sentrerte indikatorer for JR (f.eks. Støtte_sjef_c)
# - Produktindikatorer for JKxFN (f.eks. For_mye_arbeid_c_x_LFC)
# - Produktindikatorer for JRxFN (f.eks. Støtte_sjef_c_x_LFC)
# Kontrollvariabler (sentrer kontinuerlige hvis de ikke er det)
NSD3201_complete$Alder_c <- scale(NSD3201_complete$Alder, center = TRUE, scale = FALSE)[,1]
# Anta at Kvinne, Utd_Videregaende, Utd_UniHogskole, Barn er klare
# --- Steg 2: Definer lavaan Modellsyntaks med Produktindikatorer ---
model_syntax_prod <- paste0("
# Målingsmodell (bruk de SENTRERTE førsteordensindikatorene)
JK =~ ", paste(jk_indicators_c_names, collapse=" + "), "
JR =~ ", paste(jr_indicators_c_names, collapse=" + "), "
# Latente interaksjonsvariabler (definert av produktindikatorene)
JKxFN =~ ", paste(jk_fn_prod_indicator_names, collapse=" + "), "
JRxFN =~ ", paste(jr_fn_prod_indicator_names, collapse=" + "), "
# Strukturell modell
# Ligning for Motivasjon (M)
Motivasjon ~ alpha1*JR + alpha2*Log_formue_c + ctrlM_Alder*Alder_c + ctrlM_Kvinne*Kvinne + ctrlM_Utd_V*Utd_Videregaende + ctrlM_Utd_UH*Utd_UniHogskole + ctrlM_Barn*Barn
# Ligning for Sykefravær (SF)
Sykefravaer_2022 ~ beta1*JK + beta2*JR + beta3*Log_formue_c + beta6*Motivasjon + beta4*JKxFN + beta5*JRxFN + ctrlSF_Alder*Alder_c + ctrlSF_Kvinne*Kvinne + ctrlSF_Utd_V*Utd_Videregaende + ctrlSF_Utd_UH*Utd_UniHogskole + ctrlSF_Barn*Barn
# Definerte parametere for indirekte effekter (H6)
JR_via_M_til_SF := alpha1 * beta6
FN_via_M_til_SF := alpha2 * beta6
# Valgfritt: Kovarianser mellom eksogene latente faktorer.
# lavaan vil ofte estimere disse som standard hvis de er rent eksogene.
# For interaksjonsmodeller kan det være nødvendig å spesifisere kovarianser
# mellom førsteordensfaktorer (JK, JR), moderatoren (Log_formue_c),
# og interaksjonsfaktorene (JKxFN, JRxFN).
# Start uten, og legg til ved behov hvis modellen sliter med konvergens eller fit.
# JK ~~ JR # Vanlig
# For å unngå problemer, kan man la lavaan estimere kovarianser mellom alle
# eksogene latente variabler og observerte eksogene prediktorer automatisk.
")
# --- Steg 3: Kjør Modellen i lavaan ---
fit_prod <- sem(model_syntax_prod,
data = NSD3201_complete,
estimator = "MLR", # Robust for ikke-normalitet
# warn = FALSE # Skru på for feilsøking
# se = "robust" # Alternativ for robuste standardfeil
)
# --- Steg 4: Inspiser Resultater ---
summary(fit_prod, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# parameterEstimates(fit_prod, standardized = TRUE)
# modindices(fit_prod, sort. = TRUE, minimum.value = 10)
library(semPlot)
if (exists("fit_prod") && inherits(fit_prod, "lavaan")) {
# 1. Grunnleggende plot med standardiserte estimater
#    Dette er ofte et godt utgangspunkt.
semPaths(fit_prod,
what = "std",                # Vis standardiserte estimater på stiene
whatLabels = "std",          # Label stiene med standardiserte estimater
layout = "tree2",            # En vanlig hierarkisk layout
residuals = FALSE,           # Ikke vis restvarianser for endogene variabler (kan gjøre plottet renere)
intercepts = FALSE,          # Ikke vis intercept/gjennomsnitt
rotation = 2,                # Roterer plottet (prøv 1, 2, 3, eller 4)
edge.label.cex = 0.7,        # Størrelse på tallene på pilene
sizeMan = 7,                 # Størrelse på manifesterte (observerte) variabler (indikatorer)
sizeLat = 10,                # Størrelse på latente variabler
nCharNodes = 0,              # 0 for å vise hele variabelnavnet (kan bli trangt)
fade = TRUE,                 # "Fade ut" ikke-signifikante stier (p > 0.05 som default)
curve = 1.5,                 # Gir litt kurve på pilene, kan hjelpe layout
edge.color = "darkgrey",     # Farge på pilene
posCol = "darkgreen",        # Farge for signifikante positive stier
negCol = "darkred"           # Farge for signifikante negative stier
)
title("SEM Diagram - Standardiserte Estimat (tree2 layout)")
# 2. Et alternativt plot med "spring" layout (kan håndtere komplekse modeller bedre, men kan være uforutsigbart)
#    og litt andre justeringer.
semPaths(fit_prod,
what = "std",
whatLabels = "est",          # Kan vise ustandardiserte for å se de faktiske koeffisientene
layout = "spring",           # Prøv "spring" for å se om det gir bedre oversikt
residuals = TRUE,            # Vis restvarianser
edge.label.cex = 0.65,
sizeMan = 5,
sizeLat = 8,
nCharNodes = 7,              # Forkort variabelnavn hvis de er lange
fade = TRUE,
edge.color = "black",
# Man kan også gruppere og fargelegge noder, men det krever mer kode for å definere gruppene
# basert på dine spesifikke variabelnavn.
node.label.cex = 0.8         # Størrelse på tekst i noder
)
title("SEM Diagram - Ustandardiserte Estimat (spring layout)")
} else {
print("Modellobjektet 'fit_prod' ble ikke funnet eller er ikke et gyldig lavaan-objekt.")
print("Sørg for at du har kjørt sem()-funksjonen og lagret resultatet i 'fit_prod'.")
}
